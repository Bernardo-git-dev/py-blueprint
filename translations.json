{
  "pt": {
    "welcome": "üêç PyBlueprint - Gerador de Projetos Python üêç",
    "ask_project_name": "Qual o nome do seu projeto?",
    "default_project_name": "meu-projeto-python",
    "choose_template": "Escolha o template do projeto:",
    "available_templates": "Templates Dispon√≠veis",
    "prompt_template_number": "Digite o n√∫mero do template",
    "creating_project": "üöÄ Iniciando a cria√ß√£o do projeto '[bold cyan]{name}[/bold cyan]' com o template '[bold cyan]{template}[/bold cyan]'...",
    "status": "Status",
    "error_dir_exists": "Erro: O diret√≥rio '{name}' j√° existe.",
    "copying_template_files": "  - Copiando arquivos do template '{template}'...",
    "configuring_project_name": "  - Configurando nome do projeto como '{name}'...",
    "cannot_process_file": "N√£o foi poss√≠vel processar o arquivo (n√£o-texto): {file_path}",
    "readme_content": "# {name}\n\nProjeto gerado com PyBlueprint usando o template {template}.\n",
    "adding_docker": "  - Adicionando configura√ß√£o Docker...",
    "docker_readme": "\n## Docker\nPara rodar com Docker, use:\n```bash\ndocker-compose up --build\n```\n",
    "creating_venv": "  - Criando ambiente virtual (.venv)...",
    "installing_deps": "  - Instalando depend√™ncias...",
    "local_setup_readme": "\n## Setup Local\n1. Ative o ambiente virtual: `source .venv/bin/activate`\n2. Rode a aplica√ß√£o.\n",
    "initializing_git": "  - Inicializando reposit√≥rio Git...",
    "git_initial_commit": "Initial commit from PyBlueprint",
    "project_created_successfully": "‚úÖ Projeto '[bold cyan]{name}[/bold cyan]' criado com sucesso! ‚úÖ\n\n[bold]Pr√≥ximos passos:[/bold]\n1. `cd {name}`\n2. Siga as instru√ß√µes no `README.md`.",
    "finished": "Finalizado",
    "cli_description": "PyBlueprint - Um gerador de projetos Python.",
    "cli_name_help": "Nome do projeto.",
    "cli_template_help": "Template do projeto.",
    "cli_venv_help": "Criar ambiente virtual.",
    "cli_git_help": "Inicializar reposit√≥rio Git.",
    "cli_docker_help": "Adicionar Dockerfile.",
    "ask_create_venv": "Deseja criar um ambiente virtual (.venv)?",
    "ask_init_git": "Deseja inicializar um reposit√≥rio Git?",
    "ask_add_docker": "Deseja adicionar suporte a Docker?"
  },
  "en": {
    "welcome": "üêç PyBlueprint - Python Project Generator üêç",
    "ask_project_name": "What is the name of your project?",
    "default_project_name": "my-python-project",
    "choose_template": "Choose the project template:",
    "available_templates": "Available Templates",
    "prompt_template_number": "Enter the template number",
    "creating_project": "üöÄ Starting project creation '[bold cyan]{name}[/bold cyan]' with template '[bold cyan]{template}[/bold cyan]'...",
    "status": "Status",
    "error_dir_exists": "Error: Directory '{name}' already exists.",
    "copying_template_files": "  - Copying template files '{template}'...",
    "configuring_project_name": "  - Configuring project name as '{name}'...",
    "cannot_process_file": "Could not process file (non-text): {file_path}",
    "readme_content": "# {name}\n\nProject generated with PyBlueprint using the {template} template.\n",
    "adding_docker": "  - Adding Docker configuration...",
    "docker_readme": "\n## Docker\nTo run with Docker, use:\n```bash\ndocker-compose up --build\n```\n",
    "creating_venv": "  - Creating virtual environment (.venv)...",
    "installing_deps": "  - Installing dependencies...",
    "local_setup_readme": "\n## Local Setup\n1. Activate the virtual environment: `source .venv/bin/activate`\n2. Run the application.\n",
    "initializing_git": "  - Initializing Git repository...",
    "git_initial_commit": "Initial commit from PyBlueprint",
    "project_created_successfully": "‚úÖ Project '[bold cyan]{name}[/bold cyan]' created successfully! ‚úÖ\n\n[bold]Next steps:[/bold]\n1. `cd {name}`\n2. Follow the instructions in `README.md`.",
    "finished": "Finished",
    "cli_description": "PyBlueprint - A Python project generator.",
    "cli_name_help": "Name of the project.",
    "cli_template_help": "Template of the project.",
    "cli_venv_help": "Create virtual environment.",
    "cli_git_help": "Initialize Git repository.",
    "cli_docker_help": "Add Dockerfile.",
    "ask_create_venv": "Do you want to create a virtual environment (.venv)?",
    "ask_init_git": "Do you want to initialize a Git repository?",
    "ask_add_docker": "Do you want to add Docker support?"
  }
}